#include <ESP8266WebServer.h>
#include <ESP8266HTTPClient.h>
#include <SPI.h>
#include <MFRC522.h>

int ledRed = D8;
int ledGreen = D9;
 
#define SS_PIN 10
#define RST_PIN 9
MFRC522 mfrc522(RST_PIN);   

const char* ssid = "";//type your ssid
const char* password = "";//type your password
const char* room = "1";//Position
 
void setup() 
{

  pinMode(ledRed, OUTPUT);
  pinMode(ledGreen, OUTPUT);
  Serial.begin(9600);   // Initiate a serial communication
  SPI.begin();      // Initiate  SPI bus
  mfrc522.PCD_Init();   // Initiate MFRC522
  Serial.println("Approximate your card to the reader...");
  Serial.println();

  digitalWrite(ledGreen, LOW);
  digitalWrite(ledRed, HIGH);
  
  // Connect to WiFi network
  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
   

  WiFi.begin(ssid, password);
   
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");Serial.println(ssid);
  }
  Serial.println("");
  Serial.println("WiFi connected");

 
   

}
void loop() 
{
  
  // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresent()) 
  {
    return;
  }
  // Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial()) 
  {
    return;
  }
  //Show UID on serial monitor
  Serial.print("UID tag :");
  String content= "";
  byte letter;
  for (byte i = 0; i < mfrc522.uid.size; i++) 
  {
     Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : "");
     Serial.print(mfrc522.uid.uidByte[i], HEX);
     content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : ""));
     content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  Serial.println();
  content.toUpperCase();


  HTTPClient http;    //Declare object of class HTTPClient

  String ADCData, station, Link;
 
//  Link = "http://httpbin.org/ip";
  Link = "http://192.168.8.101:3000/persons/" + content.substring(1) + "/" + room;
  Serial.println(Link);

  http.addHeader("Content-Type", "application/json");
  http.begin(Link);     //Specify request destination


  
  int httpCode = http.GET();            //Send the request
  String payload = http.getString();
 
  Serial.println(httpCode);   //Print HTTP return code
  Serial.println(payload);


  if (httpCode == 200){
    Serial.println("open");
    
    digitalWrite(ledGreen, HIGH);
    digitalWrite(ledRed, LOW);
    delay(2000);
    digitalWrite(ledGreen, LOW);
    digitalWrite(ledRed, HIGH);
    }
  else{
    Serial.println("close");

    digitalWrite(ledRed, LOW);
    delay(1000);
    digitalWrite(ledRed, HIGH);
    }
  http.end();  //Close connection
}
